from waftools.pebble_test import clar

def build(ctx):
    clar(ctx,
         sources_ant_glob = "src/fw/util/base64.c",
         test_sources_ant_glob = "test_base64.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/shared_circular_buffer.c",
         test_sources_ant_glob = "test_shared_circular_buffer.c")

    clar(ctx,
         sources_ant_glob = " src/fw/util/time/time.c" \
                            " src/fw/util/time/mktime.c" \
                            " tests/fakes/fake_rtc.c",
         test_sources_ant_glob = "test_time.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/dict.c",
         test_sources_ant_glob = "test_dict.c")

    #clar(ctx,
    #     sources_ant_glob = "src/fw/util/mktime.c",
    #     test_sources_ant_glob = "test_mktime.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/buffer.c",
         test_sources_ant_glob = "test_buffer.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/lru_cache.c",
         test_sources_ant_glob = "test_lru_cache.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/mbuf.c src/fw/util/mbuf_iterator.c",
         test_sources_ant_glob = "test_mbuf.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/rand/rand.c" \
                            " third_party/tinymt/TinyMT/tinymt/tinymt32.c",
         test_sources_ant_glob = "test_rand.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/stats.c",
         test_sources_ant_glob = "test_stats.c")

    clar(ctx,
         sources_ant_glob='src/fw/util/legacy_checksum.c',
         test_sources_ant_glob='test_legacy_checksum.c')

    clar(ctx,
         sources_ant_glob = " src/fw/util/rand/rand.c" \
                            " src/fw/util/generic_attribute.c" \
                            " third_party/tinymt/TinyMT/tinymt/tinymt32.c",
         test_sources_ant_glob = "test_generic_attribute.c")

    clar(ctx,
        sources_ant_glob = "src/fw/util/hdlc.c",
        test_sources_ant_glob = "test_hdlc.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/stringlist.c",
         test_sources_ant_glob = "test_stringlist.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/pstring.c",
         test_sources_ant_glob = "test_pstring.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/ihex.c",
         test_sources_ant_glob = "test_ihex.c")

    clar(ctx,
         sources_ant_glob = "src/fw/util/sle.c",
         test_sources_ant_glob = "test_sle.c")

# vim:filetype=python

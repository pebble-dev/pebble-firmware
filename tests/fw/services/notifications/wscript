from waftools.pebble_test import clar

def build(ctx):
    clar(ctx,
        sources_ant_glob = "src/fw/services/normal/notifications/notification_storage.c" \
            " src/fw/util/rand/rand.c" \
            " third_party/tinymt/TinyMT/tinymt/tinymt32.c" \
            " src/fw/util/stringlist.c" \
            " src/fw/util/time/time.c" \
            " src/fw/services/normal/filesystem/flash_translation.c" \
            " src/fw/services/normal/filesystem/pfs.c" \
            " src/fw/services/normal/timeline/item.c" \
            " src/fw/services/normal/timeline/attributes_actions.c" \
            " src/fw/services/normal/timeline/attribute_group.c" \
            " src/fw/services/normal/timeline/attribute.c" \
            " src/fw/flash_region/flash_region.c" \
            " src/fw/flash_region/filesystem_regions.c" \
            " src/fw/util/crc8.c" \
            " src/fw/util/legacy_checksum.c" \
            " tests/fakes/fake_rtc.c" \
            " tests/fakes/fake_spi_flash.c",
        test_sources_ant_glob = "test_notification_storage.c",
        override_includes=['dummy_board'])

    clar(ctx,
        sources_ant_glob = \
            " src/fw/services/normal/notifications/ancs/ancs_notifications.c " \
            " src/fw/services/normal/notifications/ancs/ancs_notifications_util.c " \
            " src/fw/services/normal/notifications/ancs/ancs_item.c " \
            " src/fw/services/normal/notifications/ancs/ancs_phone_call.c " \
            " src/fw/services/normal/timeline/attribute.c" \
            " src/fw/services/normal/timeline/attributes_actions.c" \
            " src/fw/services/normal/timeline/attribute_group.c" \
            " src/fw/services/normal/timeline/item.c" \
            " src/fw/services/normal/phone_call_util.c" \
            " src/fw/applib/fonts/codepoint.c" \
            " src/fw/applib/graphics/utf8.c" \
            " src/fw/util/pstring.c" \
            " src/fw/util/time/time.c" \
            " tests/fakes/fake_events.c",
        test_sources_ant_glob = "test_ancs_notifications.c")

    clar(ctx,
        sources_ant_glob = \
            " src/fw/services/normal/notifications/ancs/ancs_notifications_util.c " \
            " src/fw/util/time/mktime.c " \
            " src/fw/util/pstring.c" \
            " src/fw/util/time/time.c" \
            " tests/fakes/fake_rtc.c",
        test_sources_ant_glob = "test_ancs_notifications_util.c")

    clar(ctx,
        sources_ant_glob = \
            " src/fw/services/normal/notifications/ancs/ancs_filtering.c " \
            " src/fw/services/normal/timeline/attribute.c" \
            " src/fw/services/normal/timeline/attributes_actions.c" \
            " src/fw/services/normal/timeline/attribute_group.c" \
            " src/fw/util/pstring.c" \
            " src/fw/util/time/time.c",
        test_sources_ant_glob = "test_ancs_filtering.c")

    clar(ctx,
        sources_ant_glob = \
            " src/fw/services/normal/notifications/ancs/nexmo.c " \
            " src/fw/services/normal/notifications/ancs/ancs_notifications_util.c " \
            " src/fw/services/normal/timeline/attribute.c" \
            " src/fw/services/normal/timeline/attributes_actions.c" \
            " src/fw/services/normal/timeline/attribute_group.c" \
            " src/fw/util/pstring.c" \
            " src/fw/util/time/time.c " \
            " tests/fakes/fake_rtc.c ",
        test_sources_ant_glob = "test_nexmo.c")
# vim:filetype=python
